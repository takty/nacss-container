{"version":3,"sources":["container-masonry.js"],"names":["window","NS","resizeListeners","scrollListeners","document","addEventListener","l","passive","Masonry","cont","its","static","constructor","throttle","fn","isRunning","args","requestAnimationFrame","this","Node","querySelector","querySelectorAll","length","ro","ResizeObserver","layOut","observe","it","MutationObserver","childList","style","removeProperty","translate","gx","gy","cw","getBaseSize","cols","getColumCount","setProperty","xs","ys","i","push","r","getBoundingClientRect","width","height","indexOf","min","Math","max","ceil","f","v","s","getComputedStyle","columnGap","parseInt","rowGap","floor","y","c","applyMasonry","ts","t"],"mappings":"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","file":"container-masonry.min.js","sourcesContent":["/**\n * Container - Masonry\n *\n * @author Takuto Yanagida\n * @version 2023-01-05\n */\n\n'use strict';\n\nwindow['NACSS']              = window['NACSS']              || {};\nwindow['NACSS']['container'] = window['NACSS']['container'] || {};\n\n((NS) => {\n\n\t/**\n\t * Utilities\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2023-01-05\n\t */\n\t\n\tfunction getScrollOffset() {\n\t\tconst s   = getComputedStyle(document.documentElement);\n\t\tconst val = parseInt(s.scrollPaddingTop);\n\t\treturn Number.isNaN(val) ? 0 : val;\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction throttle(fn) {\n\t\tlet isRunning;\n\t\treturn (...args) => {\n\t\t\tif (isRunning) return;\n\t\t\tisRunning = true;\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tisRunning = false;\n\t\t\t\tfn(...args);\n\t\t\t});\n\t\t};\n\t}\n\t\n\tconst resizeListeners = [];\n\tconst scrollListeners = [];\n\t\n\tfunction onResize(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tresizeListeners.push(throttle(fn));\n\t}\n\t\n\tfunction onScroll(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tscrollListeners.push(throttle(fn));\n\t}\n\t\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\twindow.addEventListener('resize', () => {\n\t\t\tfor (const l of resizeListeners) l();\n\t\t}, { passive: true });\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tfor (const l of scrollListeners) l();\n\t\t}, { passive: true });\n\t});\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction onIntersect(fn, targets, threshold = 0, rootMargin = '* 0px 0px 0px') {\n\t\tconst vs = Array(targets.length).fill(false);\n\t\tconst tm = new Map();\n\t\ttargets.forEach((t, i) => tm.set(t, i));\n\t\n\t\tfunction init() {\n\t\t\tconst io = new IntersectionObserver((es) => {\n\t\t\t\tfor (const e of es) vs[tm.get(e.target)] = e.isIntersecting;\n\t\t\t\tfn(vs);\n\t\t\t}, { rootMargin: rootMargin.replace('*', `${mt}px`), threshold });\n\t\t\tfor (const t of targets) io.observe(t);\n\t\t\treturn io;\n\t\t}\n\t\tlet mt = 0;\n\t\tlet io = null;\n\t\tlet st = null;\n\t\tonResize(() => {\n\t\t\tmt = -getScrollOffset();\n\t\t\tif (st) clearTimeout(st);\n\t\t\tst = setTimeout(() => {\n\t\t\t\tif (io) io.disconnect();\n\t\t\t\tio = init();\n\t\t\t}, 100);\n\t\t}, true);\n\t}\n\t\n\n\t/**\n\t * Masonry\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2023-03-21\n\t */\n\t\n\tfunction apply(ts) {\n\t\tfor (const t of ts) new Masonry(t);\n\t}\n\t\n\t\n\t// -------------------------------------------------------------------------\n\t\n\t\n\tclass Masonry {\n\t\t#cont;\n\t\t#its;\n\t\n\t\tstatic NS = '--nc-container-masonry-';\n\t\n\t\tconstructor(cont) {\n\t\t\tthis.#cont = cont instanceof Node ? cont : document.querySelector(cont);\n\t\t\tthis.#its  = this.#cont.querySelectorAll(':scope > *');\n\t\n\t\t\tfunction throttle(fn) {\n\t\t\t\tlet isRunning;\n\t\t\t\treturn (...args) => {\n\t\t\t\t\tif (isRunning) return;\n\t\t\t\t\tisRunning = true;\n\t\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\t\tisRunning = false;\n\t\t\t\t\t\tfn(...args);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tif (this.#cont && this.#its.length) {\n\t\t\t\tconst ro = new ResizeObserver(throttle(() => this.#layOut()));\n\t\t\t\tro.observe(this.#cont);\n\t\t\t\tfor (const it of this.#its) {\n\t\t\t\t\tro.observe(it);\n\t\t\t\t}\n\t\t\t\tconst mo = new MutationObserver(throttle(() => {\n\t\t\t\t\tthis.#its = this.#cont.querySelectorAll(':scope > *');\n\t\t\t\t\tthis.#layOut();\n\t\t\t\t}));\n\t\t\t\tmo.observe(this.#cont, { childList: true });\n\t\t\t}\n\t\t}\n\t\n\t\t#layOut() {\n\t\t\tthis.#cont.style.removeProperty(Masonry.NS + 'position');\n\t\t\tthis.#cont.style.removeProperty(Masonry.NS + 'width');\n\t\n\t\t\tfor (const it of this.#its) {\n\t\t\t\tit.style.translate = '';\n\t\t\t}\n\t\t\tconst { gx, gy, cw } = this.#getBaseSize();\n\t\t\tconst cols = this.#getColumCount();\n\t\n\t\t\tthis.#cont.style.setProperty(Masonry.NS + 'position', 'absolute');\n\t\t\tthis.#cont.style.setProperty(Masonry.NS + 'width', `${cw}px`);\n\t\n\t\t\tconst xs = [];\n\t\t\tconst ys = [];\n\t\n\t\t\tfor (let i = 0; i < cols; ++i) {\n\t\t\t\txs.push(i * (cw + gx));\n\t\t\t\tys.push(0);\n\t\t\t}\n\t\t\tfor (const it of this.#its) {\n\t\t\t\tconst r = it.getBoundingClientRect();\n\t\t\t\tif (!r.width && !r.height) continue;\n\t\n\t\t\t\tconst i = ys.indexOf(this.#min(ys, gy * 2));\n\t\t\t\tit.style.translate = `${xs[i]}px ${0 | ys[i]}px`;\n\t\t\t\tys[i] += r.height + gy;\n\t\t\t}\n\t\t\tthis.#cont.style.height = `${Math.max(0, Math.ceil(Math.max(...ys) - gy))}px`;\n\t\t}\n\t\n\t\t#min(ys, f) {\n\t\t\tlet v = ys[0];\n\t\t\tfor (let i = 1; i < ys.length; i += 1) {\n\t\t\t\tif (ys[i] + f < v) {\n\t\t\t\t\tv = ys[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t\n\t\t#getBaseSize() {\n\t\t\tconst s  = window.getComputedStyle(this.#cont);\n\t\t\tconst gx = s.columnGap ? parseInt(s.columnGap) : 0;\n\t\t\tconst gy = s.rowGap    ? parseInt(s.rowGap)    : 0;\n\t\n\t\t\tlet cw = 0;\n\t\t\tfor (const it of this.#its) {\n\t\t\t\tconst r = it.getBoundingClientRect();\n\t\t\t\tif (!r.width && !r.height) continue;\n\t\n\t\t\t\tcw = Math.floor(r.width);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn { gx, gy, cw };\n\t\t}\n\t\n\t\t#getColumCount() {\n\t\t\tlet y = null;\n\t\t\tlet c = 0;\n\t\n\t\t\tfor (const it of this.#its) {\n\t\t\t\tconst r = it.getBoundingClientRect();\n\t\t\t\tif (!r.width && !r.height) continue;\n\t\n\t\t\t\tif (null === y) y = r.y;\n\t\t\t\tif (y !== r.y) return c;\n\t\t\t\tc += 1;\n\t\t\t}\n\t\t\treturn c;\n\t\t}\n\t}\n\t\n\tNS.applyMasonry = apply;\n\n})(window['NACSS']['masonry']);\n"]}